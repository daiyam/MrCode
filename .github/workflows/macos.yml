name: macOS

on: [workflow_dispatch]

jobs:
  build:
    runs-on: macOS-latest
    env:
      OS_NAME: "osx"
      VSCODE_ARCH: "x64"
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v1
        with:
          node-version: 12.14.1

      - name: Clone VSCodium repo
        run: |
          . get_repo.sh

      - name: Install dependencies
        run: |
          . install_deps.sh

      - name: Prepare VSCodium
        run: |
          . prepare.sh

      - name: Check existing MrCode tags/releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ./vscodium
        run: |
          . check_tags.sh

      - name: Build
        if: env.SHOULD_BUILD == 'yes'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ./vscodium
        run: ./build.sh

      - name: Sign binary
        if: env.SHOULD_BUILD == 'yes'
        env:
          P12_BASE64: ${{ secrets.CERTIFICATE_OSX_P12 }}
          P12_PASSWORD: ${{ secrets.CERTIFICATE_OSX_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.CERTIFICATE_OSX_KEYCHAIN_PASSWORD }}
          IDENTITY: ${{ secrets.CERTIFICATE_OSX_ID }}
        working-directory: ./vscodium
        run: |
          if [ -d "VSCode-darwin-${VSCODE_ARCH}" ];
          then
            cd "VSCode-darwin-${VSCODE_ARCH}"

            echo "+ create variables"
            CERTIFICATE_PATH=$RUNNER_TEMP/app.p12
            KEYCHAIN_PATH=$RUNNER_TEMP/app.keychain-db

            echo "+ import certificate from secrets"
            echo -n "$P12_BASE64" | base64 --decode --output $CERTIFICATE_PATH

            echo "+ create temporary keychain"
            security create-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_PATH
            security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
            security default-keychain -s $KEYCHAIN_PATH
            security unlock-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_PATH

            echo "+ import certificate to keychain"
            security import $CERTIFICATE_PATH -P $P12_PASSWORD -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
            security set-key-partition-list -S apple-tool:,apple: -s -k $KEYCHAIN_PASSWORD $KEYCHAIN_PATH
            security find-identity -v -p $KEYCHAIN_PATH

            echo "+ signing with $IDENTITY"
            codesign --deep --force --verbose --sign "$IDENTITY" MrCode.app
          fi

      - name: Zip release
        if: env.SHOULD_BUILD == 'yes'
        working-directory: ./vscodium
        run: |
          cd "VSCode-darwin-${VSCODE_ARCH}"
          zip -r -X -y ../MrCode-darwin-${VSCODE_ARCH}-${LATEST_MS_TAG}.zip ./*.app

      - name: DMG the release
        if: env.SHOULD_BUILD == 'yes'
        working-directory: ./vscodium
        run: |
          pushd "VSCode-darwin-${VSCODE_ARCH}"
          npx create-dmg MrCode.app ..
          mv "../MrCode ${LATEST_MS_TAG}.dmg" "../MrCode.${VSCODE_ARCH}.${LATEST_MS_TAG}.dmg"
          popd

      - name: Generate shasums
        if: env.SHOULD_BUILD == 'yes'
        working-directory: ./vscodium
        run: ./sum.sh

      - name: Release
        if: env.SHOULD_BUILD == 'yes'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.LATEST_MS_TAG }}
          files: |
            ./vscodium/*.zip
            ./vscodium/*.dmg
            ./vscodium/*.sha256

      - name: Update versions repo
        if: env.SHOULD_BUILD == 'yes'
        env:
          GITHUB_TOKEN: ${{ secrets.STRONGER_GITHUB_TOKEN }}
          GITHUB_USERNAME: ${{ github.repository_owner }}
        working-directory: ./vscodium
        run: ./update_version.sh

      - name: Clean up keychain
        if: ${{ always() }}
        run: |
          KEYCHAIN_PATH=$RUNNER_TEMP/app.keychain-db

          if [ -f "$KEYCHAIN_PATH" ];
          then
            security delete-keychain $KEYCHAIN_PATH
          end
