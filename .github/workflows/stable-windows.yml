name: stable-windows

on:
  workflow_dispatch:
    inputs:
      new_release:
        type: boolean
        description: Force new Release
      force_version:
        type: boolean
        description: Force update version
      vscodium_latest:
        type: boolean
        description: Use latest VSCodium
  push:
    tags:
      - "*"

env:
  APP_NAME: MrCode
  ASSETS_REPOSITORY: ${{ github.repository }}
  OS_NAME: windows
  VERSIONS_REPOSITORY: ${{ github.repository_owner }}/MrCode-versions
  VSCODE_QUALITY: stable

jobs:
  build:
    runs-on: windows-2019
    defaults:
      run:
        shell: bash
    env:
      VSCODE_ARCH: ${{ matrix.vscode_arch }}
    strategy:
      fail-fast: false
      matrix:
        vscode_arch:
          - x64
          - ia32
          - arm64
    outputs:
      RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
      SHOULD_DEPLOY: ${{ env.SHOULD_DEPLOY }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '16.17'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Setup Python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Clone VSCodium repo
        env:
          VSCODIUM_LATEST: ${{ github.event.inputs.vscodium_latest }}
        run: ./get_repo.sh

      - name: Prepare VSCodium
        run: ./prepare.sh

      - name: Check existing VSCodium tags/releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEW_RELEASE: ${{ github.event.inputs.new_release }}
        working-directory: ./vscodium
        run: ./check_tags.sh

      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          npm_config_arch: ${{ matrix.vscode_arch }}
          npm_config_target_arch: ${{ matrix.vscode_arch }}
        working-directory: ./vscodium
        run: ./build.sh
        if: env.SHOULD_BUILD == 'yes'

      - name: Prepare assets
        working-directory: ./vscodium
        run: ./prepare_assets.sh
        if: env.SHOULD_BUILD == 'yes'

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ./vscodium
        run: ./release.sh
        if: env.SHOULD_BUILD == 'yes'

      - name: Update versions repo
        env:
          FORCE_UPDATE: ${{ github.event.inputs.force_version }}
          GITHUB_TOKEN: ${{ secrets.STRONGER_GITHUB_TOKEN }}
          GITHUB_USERNAME: ${{ github.repository_owner }}
        working-directory: ./vscodium
        run: ./update_version.sh
